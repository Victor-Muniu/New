/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { CheckInListRelationFilter } from "../../checkIn/base/CheckInListRelationFilter";
import { CheckOutListRelationFilter } from "../../checkOut/base/CheckOutListRelationFilter";
import { GuestServiceListRelationFilter } from "../../guestService/base/GuestServiceListRelationFilter";
import { InvoiceListRelationFilter } from "../../invoice/base/InvoiceListRelationFilter";
import { BookingListRelationFilter } from "../../booking/base/BookingListRelationFilter";

@InputType()
class CustomerWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phoneNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CheckInListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CheckInListRelationFilter)
  @IsOptional()
  @Field(() => CheckInListRelationFilter, {
    nullable: true,
  })
  checkIns?: CheckInListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CheckOutListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CheckOutListRelationFilter)
  @IsOptional()
  @Field(() => CheckOutListRelationFilter, {
    nullable: true,
  })
  checkOuts?: CheckOutListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GuestServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GuestServiceListRelationFilter)
  @IsOptional()
  @Field(() => GuestServiceListRelationFilter, {
    nullable: true,
  })
  guestServices?: GuestServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceListRelationFilter, {
    nullable: true,
  })
  invoices?: InvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BookingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BookingListRelationFilter)
  @IsOptional()
  @Field(() => BookingListRelationFilter, {
    nullable: true,
  })
  bookings?: BookingListRelationFilter;
}

export { CustomerWhereInput as CustomerWhereInput };
