/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsInt,
  Min,
  Max,
  IsOptional,
  IsString,
  MaxLength,
  IsNumber,
  IsBoolean,
  ValidateNested,
} from "class-validator";

import { ReservationCreateNestedManyWithoutRoomsInput } from "./ReservationCreateNestedManyWithoutRoomsInput";
import { Type } from "class-transformer";
import { RoomServiceCreateNestedManyWithoutRoomsInput } from "./RoomServiceCreateNestedManyWithoutRoomsInput";
import { CheckInCreateNestedManyWithoutRoomsInput } from "./CheckInCreateNestedManyWithoutRoomsInput";
import { CheckOutCreateNestedManyWithoutRoomsInput } from "./CheckOutCreateNestedManyWithoutRoomsInput";
import { GuestServiceCreateNestedManyWithoutRoomsInput } from "./GuestServiceCreateNestedManyWithoutRoomsInput";
import { RoomStatusCreateNestedManyWithoutRoomsInput } from "./RoomStatusCreateNestedManyWithoutRoomsInput";
import { BookingCreateNestedManyWithoutRoomsInput } from "./BookingCreateNestedManyWithoutRoomsInput";
import { MaintenanceRequestCreateNestedManyWithoutRoomsInput } from "./MaintenanceRequestCreateNestedManyWithoutRoomsInput";

@InputType()
class RoomCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  roomNumber?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeField?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  pricePerNight?: number | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  availability?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => ReservationCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => ReservationCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => ReservationCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  reservations?: ReservationCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => RoomServiceCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => RoomServiceCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => RoomServiceCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  roomServices?: RoomServiceCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => CheckInCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => CheckInCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => CheckInCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  checkIns?: CheckInCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => CheckOutCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => CheckOutCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => CheckOutCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  checkOuts?: CheckOutCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => GuestServiceCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => GuestServiceCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => GuestServiceCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  guestServices?: GuestServiceCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => RoomStatusCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => RoomStatusCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => RoomStatusCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  roomStatuses?: RoomStatusCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutRoomsInput;

  @ApiProperty({
    required: false,
    type: () => MaintenanceRequestCreateNestedManyWithoutRoomsInput,
  })
  @ValidateNested()
  @Type(() => MaintenanceRequestCreateNestedManyWithoutRoomsInput)
  @IsOptional()
  @Field(() => MaintenanceRequestCreateNestedManyWithoutRoomsInput, {
    nullable: true,
  })
  maintenanceRequests?: MaintenanceRequestCreateNestedManyWithoutRoomsInput;
}

export { RoomCreateInput as RoomCreateInput };
