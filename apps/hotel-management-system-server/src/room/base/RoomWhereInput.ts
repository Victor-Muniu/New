/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { ReservationListRelationFilter } from "../../reservation/base/ReservationListRelationFilter";
import { RoomServiceListRelationFilter } from "../../roomService/base/RoomServiceListRelationFilter";
import { CheckInListRelationFilter } from "../../checkIn/base/CheckInListRelationFilter";
import { CheckOutListRelationFilter } from "../../checkOut/base/CheckOutListRelationFilter";
import { GuestServiceListRelationFilter } from "../../guestService/base/GuestServiceListRelationFilter";
import { RoomStatusListRelationFilter } from "../../roomStatus/base/RoomStatusListRelationFilter";
import { BookingListRelationFilter } from "../../booking/base/BookingListRelationFilter";
import { MaintenanceRequestListRelationFilter } from "../../maintenanceRequest/base/MaintenanceRequestListRelationFilter";

@InputType()
class RoomWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  roomNumber?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  typeField?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  pricePerNight?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  availability?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ReservationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReservationListRelationFilter)
  @IsOptional()
  @Field(() => ReservationListRelationFilter, {
    nullable: true,
  })
  reservations?: ReservationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RoomServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RoomServiceListRelationFilter)
  @IsOptional()
  @Field(() => RoomServiceListRelationFilter, {
    nullable: true,
  })
  roomServices?: RoomServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CheckInListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CheckInListRelationFilter)
  @IsOptional()
  @Field(() => CheckInListRelationFilter, {
    nullable: true,
  })
  checkIns?: CheckInListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CheckOutListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CheckOutListRelationFilter)
  @IsOptional()
  @Field(() => CheckOutListRelationFilter, {
    nullable: true,
  })
  checkOuts?: CheckOutListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GuestServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GuestServiceListRelationFilter)
  @IsOptional()
  @Field(() => GuestServiceListRelationFilter, {
    nullable: true,
  })
  guestServices?: GuestServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RoomStatusListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RoomStatusListRelationFilter)
  @IsOptional()
  @Field(() => RoomStatusListRelationFilter, {
    nullable: true,
  })
  roomStatuses?: RoomStatusListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BookingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BookingListRelationFilter)
  @IsOptional()
  @Field(() => BookingListRelationFilter, {
    nullable: true,
  })
  bookings?: BookingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MaintenanceRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MaintenanceRequestListRelationFilter)
  @IsOptional()
  @Field(() => MaintenanceRequestListRelationFilter, {
    nullable: true,
  })
  maintenanceRequests?: MaintenanceRequestListRelationFilter;
}

export { RoomWhereInput as RoomWhereInput };
